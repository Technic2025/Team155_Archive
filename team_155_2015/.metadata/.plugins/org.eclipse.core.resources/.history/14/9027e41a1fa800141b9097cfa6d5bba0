package org.usfirst.frc.team155.robot;

import com.ni.vision.NIVision;
import com.ni.vision.NIVision.ParticleFilterCriteria2;
import com.ni.vision.NIVision.ShapeReport;
import com.ni.vision.NIVision.Image;




import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.image.BinaryImage;
import edu.wpi.first.wpilibj.image.ColorImage;
import edu.wpi.first.wpilibj.image.HSLImage;
import edu.wpi.first.wpilibj.vision.AxisCamera;
import edu.wpi.first.wpilibj.image.ParticleAnalysisReport;


public class Vision155 {
	int session;
	Image frame;
	AxisCamera camera;
	int inited;
	//CriteriaCollection cc;
	ParticleFilterCriteria2[] criteria;
	final int AREA_MINIMUM = 150;
	ParticleAnalysisReport[] report;
	
	
	

	Vision155() {
		frame = NIVision.imaqCreateImage(NIVision.ImageType.IMAGE_HSL, 0);

		// open the camera at the IP address assigned. This is the IP address
		// that the camera
		// can be accessed through the web interface.
		camera = new AxisCamera("10.1.55.11");
		inited = 0;
		
		//cc = new CriteriaCollection();      // create the criteria for the particle filter
        //cc.addCriteria(NIVision.MeasurementType.IMAQ_MT_AREA, AREA_MINIMUM, 65535, false);
		//criteria={NIVision.MeasurementType.MT_AREA_BY_IMAGE_AREA, AREA_MINIMUM, 65535, false, false};
		
		
		
		
	}

	public void run(){
		
        ColorImage image = null;
        BinaryImage thresholdImage = null;
        BinaryImage filteredImage = null;
        
        System.out.println("atempting to load image...");
   
        
		try {
		    image= new HSLImage("~/HSLImage.jpg");
			image = camera.getImage();
			image.write("~/raw_image.bmp");
			thresholdImage = image.thresholdHSL(20,55,30,255,75,225); // looking for yellow object.  location: TE room
			//thresholdImage.write("/home/lvuser/thresholded_image.bmp");
			System.out.println("We captured the image!");

			/*
			report = thresholdImage.getOrderedParticleAnalysisReports();           // filter out small particles
			if (report.length > 0){
				System.out.println("Center of mass is equal to " + report[0].center_mass_x);
			}
			*/
			
			
			camera.getImage(frame);
			CameraServer.getInstance().setImage(frame);
			
			
		} catch (Exception ex) {
			System.out.println("Hey, um, we got a problem");
        } 		
		
	}

}
