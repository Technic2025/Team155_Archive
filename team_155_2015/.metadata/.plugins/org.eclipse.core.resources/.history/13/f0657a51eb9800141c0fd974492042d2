
package org.usfirst.frc.team155.robot;

import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
    /**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
	
    Joystick rightStick;
    Joystick leftStick;
    Talon leftDrive;
    Talon rightDrive;
    AnalogPotentiometer anaIn;
    DigitalInput digIn;
    DoubleSolenoid sol;
    RobotDrive myrobot;
    double temp;
    boolean temp2;
    
    public void robotInit() {
        Joystick leftStick = new Joystick(0);
        //Joystick rightStick = new Joystick(2);
        
        leftDrive = new Talon(1);
        rightDrive = new Talon(2);
        
        anaIn = new AnalogPotentiometer(1);
        digIn = new DigitalInput(1);
        sol = new DoubleSolenoid(1, 2);
        
        temp = 0;
        //myrobot = new RobotDrive(leftDrive,rightDrive);
    }

    /**
     * This function is called periodically during autonomous
     */
    public void autonomousPeriodic() {

    }

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
    	//myrobot.arcadeDrive(leftStick);
    	temp = leftStick.getY();
    	temp = leftStick.getRawAxis(1);
    	temp2 = leftStick.getTrigger();
    	leftDrive.set(1);
    	rightDrive.set(-1);
    	
    }
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    	
    	
    
    }
    
}
